# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  schedule:
    - cron: '0 4 * * *' 

  workflow_dispatch:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
    
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
        
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Extract Version
      id: get_version
      working-directory: ${{ github.workspace }}
      shell: powershell
      run: |
        # Example: Extract version from AssemblyInfo.cs or other file
        $majorVersionLine = Get-Content .\OptiScaler\resource.h | Select-String 'VER_MAJOR_VERSION'
        $majorVersion = $majorVersionLine -replace '#define VER_MAJOR_VERSION   ', ''
        $minorVersionLine = Get-Content .\OptiScaler\resource.h | Select-String 'VER_MINOR_VERSION'
        $minorVersion = $minorVersionLine -replace '#define VER_MINOR_VERSION   ', ''
        $hotfixVersionLine = Get-Content .\OptiScaler\resource.h | Select-String 'VER_HOTFIX_VERSION'
        $hotfixVersion = $hotfixVersionLine -replace '#define VER_HOTFIX_VERSION  ', ''
        $buildVersionLine = Get-Content .\OptiScaler\resource.h | Select-String 'VER_BUILD_NUMBER'
        $buildVersion = $buildVersionLine -replace '#define VER_BUILD_NUMBER    ', ''
        $version = "$majorVersion.$minorVersion.$hotfixVersion-pre$buildVersion"
        echo "::set-output name=version::$version"
      continue-on-error: false
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Compress the artifact 
      run: |
        $zipName = "OptiScaler_${{ steps.get_version.outputs.version }}.7z"
        7z a ${{ github.workspace }}\$zipName ${{ github.workspace }}\x64\Release\a\*.*
        
    - uses: actions/upload-artifact@v4
      with:
        name: OptiScaler_${{ steps.get_version.outputs.version }}
        path: ${{ github.workspace }}\OptiScaler_${{ steps.get_version.outputs.version }}.7z
        compression-level: 0
        if-no-files-found: error
